{"version":3,"file":"index.mjs","sources":["../src/shipped-proposals.ts","../src/built-in-definitions.ts","../src/babel-runtime-corejs3-paths.ts","../src/usage-filters.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["// This file is automatically generated by scripts/build-corejs3-shipped-proposals.mjs\n\nexport default new Set<string>([\n  \"esnext.array.group\",\n  \"esnext.array.group-to-map\",\n  \"esnext.json.is-raw-json\",\n  \"esnext.json.parse\",\n  \"esnext.json.raw-json\",\n  \"esnext.math.sum-precise\",\n  \"esnext.symbol.metadata\",\n  \"esnext.uint8-array.from-base64\",\n  \"esnext.uint8-array.from-hex\",\n  \"esnext.uint8-array.set-from-base64\",\n  \"esnext.uint8-array.set-from-hex\",\n  \"esnext.uint8-array.to-base64\",\n  \"esnext.uint8-array.to-hex\",\n]);\n","import corejs3Polyfills from \"../core-js-compat/data.js\";\n\ntype ObjectMap<V> = { [name: string]: V };\ntype ObjectMap2<V> = ObjectMap<ObjectMap<V>>;\n\nexport type CoreJSPolyfillDescriptor = {\n  name: string;\n  pure: string | null;\n  global: string[];\n  exclude: string[] | null;\n};\n\nconst polyfillsOrder = {};\nObject.keys(corejs3Polyfills).forEach((name, index) => {\n  polyfillsOrder[name] = index;\n});\n\nconst define = (\n  pure,\n  global,\n  name = global[0],\n  exclude?,\n): CoreJSPolyfillDescriptor => {\n  return {\n    name,\n    pure,\n    global: global.sort((a, b) => polyfillsOrder[a] - polyfillsOrder[b]),\n    exclude,\n  };\n};\n\nconst typed = (...modules) =>\n  define(null, [...modules, ...TypedArrayDependencies]);\n\nconst ArrayNatureIterators = [\n  \"es.array.iterator\",\n  \"web.dom-collections.iterator\",\n];\n\nexport const CommonIterators = [\"es.string.iterator\", ...ArrayNatureIterators];\n\nconst ArrayNatureIteratorsWithTag = [\n  \"es.object.to-string\",\n  ...ArrayNatureIterators,\n];\n\nconst CommonIteratorsWithTag = [\"es.object.to-string\", ...CommonIterators];\n\nconst ErrorDependencies = [\"es.error.cause\", \"es.error.to-string\"];\n\nconst SuppressedErrorDependencies = [\n  \"es.suppressed-error.constructor\",\n  ...ErrorDependencies,\n];\n\nconst ArrayBufferDependencies = [\n  \"es.array-buffer.constructor\",\n  \"es.array-buffer.slice\",\n  \"es.data-view\",\n  \"es.array-buffer.detached\",\n  \"es.array-buffer.transfer\",\n  \"es.array-buffer.transfer-to-fixed-length\",\n  \"es.object.to-string\",\n];\n\nconst TypedArrayDependencies = [\n  \"es.typed-array.at\",\n  \"es.typed-array.copy-within\",\n  \"es.typed-array.every\",\n  \"es.typed-array.fill\",\n  \"es.typed-array.filter\",\n  \"es.typed-array.find\",\n  \"es.typed-array.find-index\",\n  \"es.typed-array.find-last\",\n  \"es.typed-array.find-last-index\",\n  \"es.typed-array.for-each\",\n  \"es.typed-array.includes\",\n  \"es.typed-array.index-of\",\n  \"es.typed-array.iterator\",\n  \"es.typed-array.join\",\n  \"es.typed-array.last-index-of\",\n  \"es.typed-array.map\",\n  \"es.typed-array.reduce\",\n  \"es.typed-array.reduce-right\",\n  \"es.typed-array.reverse\",\n  \"es.typed-array.set\",\n  \"es.typed-array.slice\",\n  \"es.typed-array.some\",\n  \"es.typed-array.sort\",\n  \"es.typed-array.subarray\",\n  \"es.typed-array.to-locale-string\",\n  \"es.typed-array.to-reversed\",\n  \"es.typed-array.to-sorted\",\n  \"es.typed-array.to-string\",\n  \"es.typed-array.with\",\n  \"es.object.to-string\",\n  \"es.array.iterator\",\n  \"esnext.typed-array.filter-reject\",\n  \"esnext.typed-array.group-by\",\n  \"esnext.typed-array.to-spliced\",\n  \"esnext.typed-array.unique-by\",\n  ...ArrayBufferDependencies,\n];\n\nexport const PromiseDependencies = [\"es.promise\", \"es.object.to-string\"];\n\nexport const PromiseDependenciesWithIterators = [\n  ...PromiseDependencies,\n  ...CommonIterators,\n];\n\nconst SymbolDependencies = [\n  \"es.symbol\",\n  \"es.symbol.description\",\n  \"es.object.to-string\",\n];\n\nconst MapDependencies = [\n  \"es.map\",\n  \"esnext.map.delete-all\",\n  \"esnext.map.emplace\",\n  \"esnext.map.every\",\n  \"esnext.map.filter\",\n  \"esnext.map.find\",\n  \"esnext.map.find-key\",\n  \"esnext.map.get-or-insert\",\n  \"esnext.map.get-or-insert-computed\",\n  \"esnext.map.includes\",\n  \"esnext.map.key-of\",\n  \"esnext.map.map-keys\",\n  \"esnext.map.map-values\",\n  \"esnext.map.merge\",\n  \"esnext.map.reduce\",\n  \"esnext.map.some\",\n  \"esnext.map.update\",\n  ...CommonIteratorsWithTag,\n];\n\nconst SetDependencies = [\n  \"es.set\",\n  \"es.set.difference.v2\",\n  \"es.set.intersection.v2\",\n  \"es.set.is-disjoint-from.v2\",\n  \"es.set.is-subset-of.v2\",\n  \"es.set.is-superset-of.v2\",\n  \"es.set.symmetric-difference.v2\",\n  \"es.set.union.v2\",\n  \"esnext.set.add-all\",\n  \"esnext.set.delete-all\",\n  \"esnext.set.difference\",\n  \"esnext.set.every\",\n  \"esnext.set.filter\",\n  \"esnext.set.find\",\n  \"esnext.set.intersection\",\n  \"esnext.set.is-disjoint-from\",\n  \"esnext.set.is-subset-of\",\n  \"esnext.set.is-superset-of\",\n  \"esnext.set.join\",\n  \"esnext.set.map\",\n  \"esnext.set.reduce\",\n  \"esnext.set.some\",\n  \"esnext.set.symmetric-difference\",\n  \"esnext.set.union\",\n  ...CommonIteratorsWithTag,\n];\n\nconst WeakMapDependencies = [\n  \"es.weak-map\",\n  \"esnext.weak-map.delete-all\",\n  \"esnext.weak-map.emplace\",\n  \"esnext.weak-map.get-or-insert\",\n  \"esnext.weak-map.get-or-insert-computed\",\n  ...CommonIteratorsWithTag,\n];\n\nconst WeakSetDependencies = [\n  \"es.weak-set\",\n  \"esnext.weak-set.add-all\",\n  \"esnext.weak-set.delete-all\",\n  ...CommonIteratorsWithTag,\n];\n\nconst DOMExceptionDependencies = [\n  \"web.dom-exception.constructor\",\n  \"web.dom-exception.stack\",\n  \"web.dom-exception.to-string-tag\",\n  \"es.error.to-string\",\n];\n\nconst URLSearchParamsDependencies = [\n  \"web.url-search-params\",\n  \"web.url-search-params.delete\",\n  \"web.url-search-params.has\",\n  \"web.url-search-params.size\",\n  ...CommonIteratorsWithTag,\n];\n\nconst AsyncIteratorDependencies = [\n  \"esnext.async-iterator.constructor\",\n  ...PromiseDependencies,\n];\n\nconst AsyncIteratorProblemMethods = [\n  \"esnext.async-iterator.every\",\n  \"esnext.async-iterator.filter\",\n  \"esnext.async-iterator.find\",\n  \"esnext.async-iterator.flat-map\",\n  \"esnext.async-iterator.for-each\",\n  \"esnext.async-iterator.map\",\n  \"esnext.async-iterator.reduce\",\n  \"esnext.async-iterator.some\",\n];\n\nconst IteratorDependencies = [\"es.iterator.constructor\", \"es.object.to-string\"];\n\nexport const DecoratorMetadataDependencies = [\n  \"esnext.symbol.metadata\",\n  \"esnext.function.metadata\",\n];\n\nconst TypedArrayStaticMethods = (base: string) => ({\n  from: define(null, [\"es.typed-array.from\", base, ...TypedArrayDependencies]),\n  fromAsync: define(null, [\n    \"esnext.typed-array.from-async\",\n    base,\n    ...PromiseDependenciesWithIterators,\n    ...TypedArrayDependencies,\n  ]),\n  of: define(null, [\"es.typed-array.of\", base, ...TypedArrayDependencies]),\n});\n\nconst DataViewDependencies = [\"es.data-view\", ...ArrayBufferDependencies];\n\nexport const BuiltIns: ObjectMap<CoreJSPolyfillDescriptor> = {\n  AsyncDisposableStack: define(\"async-disposable-stack/index\", [\n    \"es.async-disposable-stack.constructor\",\n    \"es.object.to-string\",\n    \"es.async-iterator.async-dispose\",\n    \"es.iterator.dispose\",\n    ...PromiseDependencies,\n    ...SuppressedErrorDependencies,\n  ]),\n  AsyncIterator: define(\"async-iterator/index\", AsyncIteratorDependencies),\n  AggregateError: define(\"aggregate-error\", [\n    \"es.aggregate-error\",\n    ...ErrorDependencies,\n    ...CommonIteratorsWithTag,\n    \"es.aggregate-error.cause\",\n  ]),\n  ArrayBuffer: define(null, ArrayBufferDependencies),\n  DataView: define(null, DataViewDependencies),\n  Date: define(null, [\"es.date.to-string\"]),\n  DOMException: define(\"dom-exception/index\", DOMExceptionDependencies),\n  DisposableStack: define(\"disposable-stack/index\", [\n    \"es.disposable-stack.constructor\",\n    \"es.object.to-string\",\n    \"es.iterator.dispose\",\n    ...SuppressedErrorDependencies,\n  ]),\n  Error: define(null, ErrorDependencies),\n  EvalError: define(null, ErrorDependencies),\n  Float32Array: typed(\"es.typed-array.float32-array\"),\n  Float64Array: typed(\"es.typed-array.float64-array\"),\n  Int8Array: typed(\"es.typed-array.int8-array\"),\n  Int16Array: typed(\"es.typed-array.int16-array\"),\n  Int32Array: typed(\"es.typed-array.int32-array\"),\n  Iterator: define(\"iterator/index\", IteratorDependencies),\n  Uint8Array: typed(\n    \"es.typed-array.uint8-array\",\n    \"esnext.uint8-array.set-from-base64\",\n    \"esnext.uint8-array.set-from-hex\",\n    \"esnext.uint8-array.to-base64\",\n    \"esnext.uint8-array.to-hex\",\n  ),\n  Uint8ClampedArray: typed(\"es.typed-array.uint8-clamped-array\"),\n  Uint16Array: typed(\"es.typed-array.uint16-array\"),\n  Uint32Array: typed(\"es.typed-array.uint32-array\"),\n  Map: define(\"map/index\", MapDependencies),\n  Number: define(null, [\"es.number.constructor\"]),\n  Observable: define(\"observable/index\", [\n    \"esnext.observable\",\n    \"esnext.symbol.observable\",\n    \"es.object.to-string\",\n    ...CommonIteratorsWithTag,\n  ]),\n  Promise: define(\"promise/index\", PromiseDependencies),\n  RangeError: define(null, ErrorDependencies),\n  ReferenceError: define(null, ErrorDependencies),\n  Reflect: define(null, [\"es.reflect.to-string-tag\", \"es.object.to-string\"]),\n  RegExp: define(null, [\n    \"es.regexp.constructor\",\n    \"es.regexp.dot-all\",\n    \"es.regexp.exec\",\n    \"es.regexp.sticky\",\n    \"es.regexp.to-string\",\n  ]),\n  Set: define(\"set/index\", SetDependencies),\n  SuppressedError: define(\"suppressed-error\", SuppressedErrorDependencies),\n  Symbol: define(\"symbol/index\", SymbolDependencies),\n  SyntaxError: define(null, ErrorDependencies),\n  TypeError: define(null, ErrorDependencies),\n  URIError: define(null, ErrorDependencies),\n  URL: define(\"url/index\", [\n    \"web.url\",\n    \"web.url.to-json\",\n    ...URLSearchParamsDependencies,\n  ]),\n  URLSearchParams: define(\n    \"url-search-params/index\",\n    URLSearchParamsDependencies,\n  ),\n  WeakMap: define(\"weak-map/index\", WeakMapDependencies),\n  WeakSet: define(\"weak-set/index\", WeakSetDependencies),\n\n  atob: define(\"atob\", [\"web.atob\", ...DOMExceptionDependencies]),\n  btoa: define(\"btoa\", [\"web.btoa\", ...DOMExceptionDependencies]),\n  clearImmediate: define(\"clear-immediate\", [\"web.immediate\"]),\n  compositeKey: define(\"composite-key\", [\"esnext.composite-key\"]),\n  compositeSymbol: define(\"composite-symbol\", [\"esnext.composite-symbol\"]),\n  escape: define(\"escape\", [\"es.escape\"]),\n  fetch: define(null, PromiseDependencies),\n  globalThis: define(\"global-this\", [\"es.global-this\"]),\n  parseFloat: define(\"parse-float\", [\"es.parse-float\"]),\n  parseInt: define(\"parse-int\", [\"es.parse-int\"]),\n  queueMicrotask: define(\"queue-microtask\", [\"web.queue-microtask\"]),\n  self: define(\"self\", [\"web.self\"]),\n  setImmediate: define(\"set-immediate\", [\"web.immediate\"]),\n  setInterval: define(\"set-interval\", [\"web.timers\"]),\n  setTimeout: define(\"set-timeout\", [\"web.timers\"]),\n  structuredClone: define(\"structured-clone\", [\n    \"web.structured-clone\",\n    ...DOMExceptionDependencies,\n    \"es.array.iterator\",\n    \"es.object.keys\",\n    \"es.object.to-string\",\n    \"es.map\",\n    \"es.set\",\n  ]),\n  unescape: define(\"unescape\", [\"es.unescape\"]),\n};\n\nexport const StaticProperties: ObjectMap2<CoreJSPolyfillDescriptor> = {\n  AsyncIterator: {\n    from: define(\"async-iterator/from\", [\n      \"esnext.async-iterator.from\",\n      ...AsyncIteratorDependencies,\n      ...AsyncIteratorProblemMethods,\n      ...CommonIterators,\n    ]),\n  },\n  Array: {\n    from: define(\"array/from\", [\"es.array.from\", \"es.string.iterator\"]),\n    fromAsync: define(\"array/from-async\", [\n      \"es.array.from-async\",\n      ...PromiseDependenciesWithIterators,\n    ]),\n    isArray: define(\"array/is-array\", [\"es.array.is-array\"]),\n    isTemplateObject: define(\"array/is-template-object\", [\n      \"esnext.array.is-template-object\",\n    ]),\n    of: define(\"array/of\", [\"es.array.of\"]),\n  },\n\n  ArrayBuffer: {\n    isView: define(null, [\"es.array-buffer.is-view\"]),\n  },\n\n  BigInt: {\n    range: define(\"bigint/range\", [\n      \"esnext.bigint.range\",\n      \"es.object.to-string\",\n    ]),\n  },\n\n  Date: {\n    now: define(\"date/now\", [\"es.date.now\"]),\n  },\n\n  Error: {\n    isError: define(\"error/is-error\", [\n      \"es.error.is-error\",\n      \"es.object.create\",\n    ]),\n  },\n\n  Function: {\n    isCallable: define(\"function/is-callable\", [\"esnext.function.is-callable\"]),\n    isConstructor: define(\"function/is-constructor\", [\n      \"esnext.function.is-constructor\",\n    ]),\n  },\n\n  Iterator: {\n    concat: define(\"iterator/concat\", [\n      \"esnext.iterator.concat\",\n      ...IteratorDependencies,\n      ...CommonIterators,\n    ]),\n    from: define(\"iterator/from\", [\n      \"es.iterator.from\",\n      ...IteratorDependencies,\n      ...CommonIterators,\n    ]),\n    range: define(\"iterator/range\", [\n      \"esnext.iterator.range\",\n      ...IteratorDependencies,\n    ]),\n    zip: define(\"iterator/zip\", [\n      \"esnext.iterator.zip\",\n      ...IteratorDependencies,\n      ...CommonIterators,\n    ]),\n    zipKeyed: define(\"iterator/zip-keyed\", [\n      \"esnext.iterator.zip-keyed\",\n      \"es.object.create\",\n      \"es.reflect.own-keys\",\n      ...IteratorDependencies,\n      ...CommonIterators,\n    ]),\n  },\n\n  JSON: {\n    isRawJSON: define(\"json/is-raw-json\", [\"esnext.json.is-raw-json\"]),\n    parse: define(\"json/parse\", [\"esnext.json.parse\", \"es.object.keys\"]),\n    rawJSON: define(\"json/raw-json\", [\n      \"esnext.json.raw-json\",\n      \"es.object.create\",\n      \"es.object.freeze\",\n    ]),\n    stringify: define(\n      \"json/stringify\",\n      [\"es.json.stringify\", \"es.date.to-json\"],\n      \"es.symbol\",\n    ),\n  },\n\n  Math: {\n    DEG_PER_RAD: define(\"math/deg-per-rad\", [\"esnext.math.deg-per-rad\"]),\n    RAD_PER_DEG: define(\"math/rad-per-deg\", [\"esnext.math.rad-per-deg\"]),\n    acosh: define(\"math/acosh\", [\"es.math.acosh\"]),\n    asinh: define(\"math/asinh\", [\"es.math.asinh\"]),\n    atanh: define(\"math/atanh\", [\"es.math.atanh\"]),\n    cbrt: define(\"math/cbrt\", [\"es.math.cbrt\"]),\n    clamp: define(\"math/clamp\", [\"esnext.math.clamp\"]),\n    clz32: define(\"math/clz32\", [\"es.math.clz32\"]),\n    cosh: define(\"math/cosh\", [\"es.math.cosh\"]),\n    degrees: define(\"math/degrees\", [\"esnext.math.degrees\"]),\n    expm1: define(\"math/expm1\", [\"es.math.expm1\"]),\n    fround: define(\"math/fround\", [\"es.math.fround\"]),\n    f16round: define(\"math/f16round\", [\"es.math.f16round\"]),\n    fscale: define(\"math/fscale\", [\"esnext.math.fscale\"]),\n    hypot: define(\"math/hypot\", [\"es.math.hypot\"]),\n    iaddh: define(\"math/iaddh\", [\"esnext.math.iaddh\"]),\n    imul: define(\"math/imul\", [\"es.math.imul\"]),\n    imulh: define(\"math/imulh\", [\"esnext.math.imulh\"]),\n    isubh: define(\"math/isubh\", [\"esnext.math.isubh\"]),\n    log10: define(\"math/log10\", [\"es.math.log10\"]),\n    log1p: define(\"math/log1p\", [\"es.math.log1p\"]),\n    log2: define(\"math/log2\", [\"es.math.log2\"]),\n    radians: define(\"math/radians\", [\"esnext.math.radians\"]),\n    scale: define(\"math/scale\", [\"esnext.math.scale\"]),\n    seededPRNG: define(\"math/seeded-prng\", [\"esnext.math.seeded-prng\"]),\n    sign: define(\"math/sign\", [\"es.math.sign\"]),\n    signbit: define(\"math/signbit\", [\"esnext.math.signbit\"]),\n    sinh: define(\"math/sinh\", [\"es.math.sinh\"]),\n    sumPrecise: define(\"math/sum-precise\", [\n      \"esnext.math.sum-precise\",\n      \"es.array.iterator\",\n    ]),\n    tanh: define(\"math/tanh\", [\"es.math.tanh\"]),\n    trunc: define(\"math/trunc\", [\"es.math.trunc\"]),\n    umulh: define(\"math/umulh\", [\"esnext.math.umulh\"]),\n  },\n\n  Map: {\n    from: define(\"map/from\", [\"esnext.map.from\", ...MapDependencies]),\n    groupBy: define(\"map/group-by\", [\"es.map.group-by\", ...MapDependencies]),\n    keyBy: define(\"map/key-by\", [\"esnext.map.key-by\", ...MapDependencies]),\n    of: define(\"map/of\", [\"esnext.map.of\", ...MapDependencies]),\n  },\n\n  Number: {\n    EPSILON: define(\"number/epsilon\", [\"es.number.epsilon\"]),\n    MAX_SAFE_INTEGER: define(\"number/max-safe-integer\", [\n      \"es.number.max-safe-integer\",\n    ]),\n    MIN_SAFE_INTEGER: define(\"number/min-safe-integer\", [\n      \"es.number.min-safe-integer\",\n    ]),\n    fromString: define(\"number/from-string\", [\"esnext.number.from-string\"]),\n    isFinite: define(\"number/is-finite\", [\"es.number.is-finite\"]),\n    isInteger: define(\"number/is-integer\", [\"es.number.is-integer\"]),\n    isNaN: define(\"number/is-nan\", [\"es.number.is-nan\"]),\n    isSafeInteger: define(\"number/is-safe-integer\", [\n      \"es.number.is-safe-integer\",\n    ]),\n    parseFloat: define(\"number/parse-float\", [\"es.number.parse-float\"]),\n    parseInt: define(\"number/parse-int\", [\"es.number.parse-int\"]),\n    range: define(\"number/range\", [\n      \"esnext.number.range\",\n      \"es.object.to-string\",\n    ]),\n  },\n\n  Object: {\n    assign: define(\"object/assign\", [\"es.object.assign\"]),\n    create: define(\"object/create\", [\"es.object.create\"]),\n    defineProperties: define(\"object/define-properties\", [\n      \"es.object.define-properties\",\n    ]),\n    defineProperty: define(\"object/define-property\", [\n      \"es.object.define-property\",\n    ]),\n    entries: define(\"object/entries\", [\"es.object.entries\"]),\n    freeze: define(\"object/freeze\", [\"es.object.freeze\"]),\n    fromEntries: define(\"object/from-entries\", [\n      \"es.object.from-entries\",\n      \"es.array.iterator\",\n    ]),\n    getOwnPropertyDescriptor: define(\"object/get-own-property-descriptor\", [\n      \"es.object.get-own-property-descriptor\",\n    ]),\n    getOwnPropertyDescriptors: define(\"object/get-own-property-descriptors\", [\n      \"es.object.get-own-property-descriptors\",\n    ]),\n    getOwnPropertyNames: define(\"object/get-own-property-names\", [\n      \"es.object.get-own-property-names\",\n    ]),\n    getOwnPropertySymbols: define(\"object/get-own-property-symbols\", [\n      \"es.symbol\",\n    ]),\n    getPrototypeOf: define(\"object/get-prototype-of\", [\n      \"es.object.get-prototype-of\",\n    ]),\n    groupBy: define(\"object/group-by\", [\n      \"es.object.group-by\",\n      \"es.object.create\",\n    ]),\n    hasOwn: define(\"object/has-own\", [\"es.object.has-own\"]),\n    is: define(\"object/is\", [\"es.object.is\"]),\n    isExtensible: define(\"object/is-extensible\", [\"es.object.is-extensible\"]),\n    isFrozen: define(\"object/is-frozen\", [\"es.object.is-frozen\"]),\n    isSealed: define(\"object/is-sealed\", [\"es.object.is-sealed\"]),\n    keys: define(\"object/keys\", [\"es.object.keys\"]),\n    preventExtensions: define(\"object/prevent-extensions\", [\n      \"es.object.prevent-extensions\",\n    ]),\n    seal: define(\"object/seal\", [\"es.object.seal\"]),\n    setPrototypeOf: define(\"object/set-prototype-of\", [\n      \"es.object.set-prototype-of\",\n    ]),\n    values: define(\"object/values\", [\"es.object.values\"]),\n  },\n\n  Promise: {\n    all: define(null, PromiseDependenciesWithIterators),\n    allSettled: define(\"promise/all-settled\", [\n      \"es.promise.all-settled\",\n      ...PromiseDependenciesWithIterators,\n    ]),\n    any: define(\"promise/any\", [\n      \"es.promise.any\",\n      \"es.aggregate-error\",\n      ...PromiseDependenciesWithIterators,\n    ]),\n    race: define(null, PromiseDependenciesWithIterators),\n    try: define(\"promise/try\", [\"es.promise.try\", ...PromiseDependencies]),\n    withResolvers: define(\"promise/with-resolvers\", [\n      \"es.promise.with-resolvers\",\n      ...PromiseDependencies,\n    ]),\n  },\n\n  Reflect: {\n    apply: define(\"reflect/apply\", [\"es.reflect.apply\"]),\n    construct: define(\"reflect/construct\", [\"es.reflect.construct\"]),\n    defineMetadata: define(\"reflect/define-metadata\", [\n      \"esnext.reflect.define-metadata\",\n    ]),\n    defineProperty: define(\"reflect/define-property\", [\n      \"es.reflect.define-property\",\n    ]),\n    deleteMetadata: define(\"reflect/delete-metadata\", [\n      \"esnext.reflect.delete-metadata\",\n    ]),\n    deleteProperty: define(\"reflect/delete-property\", [\n      \"es.reflect.delete-property\",\n    ]),\n    get: define(\"reflect/get\", [\"es.reflect.get\"]),\n    getMetadata: define(\"reflect/get-metadata\", [\n      \"esnext.reflect.get-metadata\",\n    ]),\n    getMetadataKeys: define(\"reflect/get-metadata-keys\", [\n      \"esnext.reflect.get-metadata-keys\",\n    ]),\n    getOwnMetadata: define(\"reflect/get-own-metadata\", [\n      \"esnext.reflect.get-own-metadata\",\n    ]),\n    getOwnMetadataKeys: define(\"reflect/get-own-metadata-keys\", [\n      \"esnext.reflect.get-own-metadata-keys\",\n    ]),\n    getOwnPropertyDescriptor: define(\"reflect/get-own-property-descriptor\", [\n      \"es.reflect.get-own-property-descriptor\",\n    ]),\n    getPrototypeOf: define(\"reflect/get-prototype-of\", [\n      \"es.reflect.get-prototype-of\",\n    ]),\n    has: define(\"reflect/has\", [\"es.reflect.has\"]),\n    hasMetadata: define(\"reflect/has-metadata\", [\n      \"esnext.reflect.has-metadata\",\n    ]),\n    hasOwnMetadata: define(\"reflect/has-own-metadata\", [\n      \"esnext.reflect.has-own-metadata\",\n    ]),\n    isExtensible: define(\"reflect/is-extensible\", [\"es.reflect.is-extensible\"]),\n    metadata: define(\"reflect/metadata\", [\"esnext.reflect.metadata\"]),\n    ownKeys: define(\"reflect/own-keys\", [\"es.reflect.own-keys\"]),\n    preventExtensions: define(\"reflect/prevent-extensions\", [\n      \"es.reflect.prevent-extensions\",\n    ]),\n    set: define(\"reflect/set\", [\"es.reflect.set\"]),\n    setPrototypeOf: define(\"reflect/set-prototype-of\", [\n      \"es.reflect.set-prototype-of\",\n    ]),\n  },\n\n  RegExp: {\n    escape: define(\"regexp/escape\", [\"es.regexp.escape\"]),\n  },\n\n  Set: {\n    from: define(\"set/from\", [\"esnext.set.from\", ...SetDependencies]),\n    of: define(\"set/of\", [\"esnext.set.of\", ...SetDependencies]),\n  },\n\n  String: {\n    cooked: define(\"string/cooked\", [\"esnext.string.cooked\"]),\n    dedent: define(\"string/dedent\", [\n      \"esnext.string.dedent\",\n      \"es.string.from-code-point\",\n      \"es.weak-map\",\n    ]),\n    fromCodePoint: define(\"string/from-code-point\", [\n      \"es.string.from-code-point\",\n    ]),\n    raw: define(\"string/raw\", [\"es.string.raw\"]),\n  },\n\n  Symbol: {\n    asyncDispose: define(\"symbol/async-dispose\", [\n      \"es.symbol.async-dispose\",\n      \"es.async-iterator.async-dispose\",\n    ]),\n    asyncIterator: define(\"symbol/async-iterator\", [\n      \"es.symbol.async-iterator\",\n    ]),\n    customMatcher: define(\"symbol/custom-matcher\", [\n      \"esnext.symbol.custom-matcher\",\n    ]),\n    dispose: define(\"symbol/dispose\", [\n      \"es.symbol.dispose\",\n      \"es.iterator.dispose\",\n    ]),\n    for: define(\"symbol/for\", [], \"es.symbol\"),\n    hasInstance: define(\"symbol/has-instance\", [\n      \"es.symbol.has-instance\",\n      \"es.function.has-instance\",\n    ]),\n    isConcatSpreadable: define(\"symbol/is-concat-spreadable\", [\n      \"es.symbol.is-concat-spreadable\",\n      \"es.array.concat\",\n    ]),\n    isRegistered: define(\"symbol/is-registered\", [\n      \"esnext.symbol.is-registered\",\n      \"es.symbol\",\n    ]),\n    isRegisteredSymbol: define(\"symbol/is-registered-symbol\", [\n      \"esnext.symbol.is-registered-symbol\",\n      \"es.symbol\",\n    ]),\n    isWellKnown: define(\"symbol/is-well-known\", [\n      \"esnext.symbol.is-well-known\",\n      \"es.symbol\",\n    ]),\n    isWellKnownSymbol: define(\"symbol/is-well-known-symbol\", [\n      \"esnext.symbol.is-well-known-symbol\",\n      \"es.symbol\",\n    ]),\n    iterator: define(\"symbol/iterator\", [\n      \"es.symbol.iterator\",\n      ...CommonIteratorsWithTag,\n    ]),\n    keyFor: define(\"symbol/key-for\", [], \"es.symbol\"),\n    match: define(\"symbol/match\", [\"es.symbol.match\", \"es.string.match\"]),\n    matcher: define(\"symbol/matcher\", [\"esnext.symbol.matcher\"]),\n    matchAll: define(\"symbol/match-all\", [\n      \"es.symbol.match-all\",\n      \"es.string.match-all\",\n    ]),\n    metadata: define(\"symbol/metadata\", DecoratorMetadataDependencies),\n    metadataKey: define(\"symbol/metadata-key\", [\"esnext.symbol.metadata-key\"]),\n    observable: define(\"symbol/observable\", [\"esnext.symbol.observable\"]),\n    patternMatch: define(\"symbol/pattern-match\", [\n      \"esnext.symbol.pattern-match\",\n    ]),\n    replace: define(\"symbol/replace\", [\n      \"es.symbol.replace\",\n      \"es.string.replace\",\n    ]),\n    search: define(\"symbol/search\", [\"es.symbol.search\", \"es.string.search\"]),\n    species: define(\"symbol/species\", [\n      \"es.symbol.species\",\n      \"es.array.species\",\n    ]),\n    split: define(\"symbol/split\", [\"es.symbol.split\", \"es.string.split\"]),\n    toPrimitive: define(\"symbol/to-primitive\", [\n      \"es.symbol.to-primitive\",\n      \"es.date.to-primitive\",\n    ]),\n    toStringTag: define(\"symbol/to-string-tag\", [\n      \"es.symbol.to-string-tag\",\n      \"es.object.to-string\",\n      \"es.math.to-string-tag\",\n      \"es.json.to-string-tag\",\n    ]),\n    unscopables: define(\"symbol/unscopables\", [\"es.symbol.unscopables\"]),\n  },\n\n  URL: {\n    canParse: define(\"url/can-parse\", [\"web.url.can-parse\", \"web.url\"]),\n    parse: define(\"url/parse\", [\"web.url.parse\", \"web.url\"]),\n  },\n\n  WeakMap: {\n    from: define(\"weak-map/from\", [\n      \"esnext.weak-map.from\",\n      ...WeakMapDependencies,\n    ]),\n    of: define(\"weak-map/of\", [\"esnext.weak-map.of\", ...WeakMapDependencies]),\n  },\n\n  WeakSet: {\n    from: define(\"weak-set/from\", [\n      \"esnext.weak-set.from\",\n      ...WeakSetDependencies,\n    ]),\n    of: define(\"weak-set/of\", [\"esnext.weak-set.of\", ...WeakSetDependencies]),\n  },\n\n  Int8Array: TypedArrayStaticMethods(\"es.typed-array.int8-array\"),\n  Uint8Array: {\n    fromBase64: define(null, [\n      \"esnext.uint8-array.from-base64\",\n      ...TypedArrayDependencies,\n    ]),\n    fromHex: define(null, [\n      \"esnext.uint8-array.from-hex\",\n      ...TypedArrayDependencies,\n    ]),\n    ...TypedArrayStaticMethods(\"es.typed-array.uint8-array\"),\n  },\n  Uint8ClampedArray: TypedArrayStaticMethods(\n    \"es.typed-array.uint8-clamped-array\",\n  ),\n  Int16Array: TypedArrayStaticMethods(\"es.typed-array.int16-array\"),\n  Uint16Array: TypedArrayStaticMethods(\"es.typed-array.uint16-array\"),\n  Int32Array: TypedArrayStaticMethods(\"es.typed-array.int32-array\"),\n  Uint32Array: TypedArrayStaticMethods(\"es.typed-array.uint32-array\"),\n  Float32Array: TypedArrayStaticMethods(\"es.typed-array.float32-array\"),\n  Float64Array: TypedArrayStaticMethods(\"es.typed-array.float64-array\"),\n\n  WebAssembly: {\n    CompileError: define(null, ErrorDependencies),\n    LinkError: define(null, ErrorDependencies),\n    RuntimeError: define(null, ErrorDependencies),\n  },\n};\n\n[\n  \"AggregateError\",\n  \"EvalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SuppressedError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\",\n].forEach(ERROR_SUBCLASS => {\n  StaticProperties[ERROR_SUBCLASS] = StaticProperties.Error;\n});\n\nexport const InstanceProperties = {\n  asIndexedPairs: define(null, [\n    \"esnext.async-iterator.as-indexed-pairs\",\n    ...AsyncIteratorDependencies,\n    \"esnext.iterator.as-indexed-pairs\",\n    ...IteratorDependencies,\n  ]),\n  at: define(\"instance/at\", [\n    // TODO: We should introduce overloaded instance methods definition\n    // Before that is implemented, the `esnext.string.at` must be the first\n    // In pure mode, the provider resolves the descriptor as a \"pure\" `esnext.string.at`\n    // and treats the compat-data of `esnext.string.at` as the compat-data of\n    // pure import `instance/at`. The first polyfill here should have the lowest corejs\n    // supported versions.\n    \"esnext.string.at\",\n    \"es.string.at-alternative\",\n    \"es.array.at\",\n  ]),\n  anchor: define(null, [\"es.string.anchor\"]),\n  big: define(null, [\"es.string.big\"]),\n  bind: define(\"instance/bind\", [\"es.function.bind\"]),\n  blink: define(null, [\"es.string.blink\"]),\n  bold: define(null, [\"es.string.bold\"]),\n  chunks: define(null, [\"esnext.iterator.chunks\", ...IteratorDependencies]),\n  // TODO: add /instance/ entry\n  clamp: define(null, [\"esnext.number.clamp\"]),\n  codePointAt: define(\"instance/code-point-at\", [\"es.string.code-point-at\"]),\n  codePoints: define(\"instance/code-points\", [\"esnext.string.code-points\"]),\n  concat: define(\"instance/concat\", [\"es.array.concat\"], undefined, [\"String\"]),\n  copyWithin: define(\"instance/copy-within\", [\"es.array.copy-within\"]),\n  demethodize: define(\"instance/demethodize\", [\"esnext.function.demethodize\"]),\n  description: define(null, [\"es.symbol\", \"es.symbol.description\"]),\n  dotAll: define(null, [\"es.regexp.dot-all\"]),\n  drop: define(null, [\n    \"es.iterator.drop\",\n    ...IteratorDependencies,\n    \"esnext.async-iterator.drop\",\n    ...AsyncIteratorDependencies,\n  ]),\n  endsWith: define(\"instance/ends-with\", [\"es.string.ends-with\"]),\n  entries: define(\"instance/entries\", ArrayNatureIteratorsWithTag),\n  every: define(\"instance/every\", [\n    \"es.array.every\",\n    \"es.iterator.every\",\n    ...IteratorDependencies,\n    // TODO: add async iterator dependencies when we support sub-dependencies\n    // esnext.async-iterator.every depends on es.promise\n    // but we don't want to pull es.promise when esnext.async-iterator is disabled\n    //\n    // \"esnext.async-iterator.every\",\n    // ...AsyncIteratorDependencies\n  ]),\n  exec: define(null, [\"es.regexp.exec\"]),\n  fill: define(\"instance/fill\", [\"es.array.fill\"]),\n  filter: define(\"instance/filter\", [\n    \"es.array.filter\",\n    \"es.iterator.filter\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.filter\",\n  ]),\n  filterReject: define(\"instance/filterReject\", [\"esnext.array.filter-reject\"]),\n  finally: define(null, [\"es.promise.finally\", ...PromiseDependencies]),\n  find: define(\"instance/find\", [\n    \"es.array.find\",\n    \"es.iterator.find\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.find\",\n  ]),\n  findIndex: define(\"instance/find-index\", [\"es.array.find-index\"]),\n  findLast: define(\"instance/find-last\", [\"es.array.find-last\"]),\n  findLastIndex: define(\"instance/find-last-index\", [\n    \"es.array.find-last-index\",\n  ]),\n  fixed: define(null, [\"es.string.fixed\"]),\n  flags: define(\"instance/flags\", [\"es.regexp.flags\"]),\n  flatMap: define(\"instance/flat-map\", [\n    \"es.array.flat-map\",\n    \"es.array.unscopables.flat-map\",\n    \"es.iterator.flat-map\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.flat-map\",\n  ]),\n  flat: define(\"instance/flat\", [\"es.array.flat\", \"es.array.unscopables.flat\"]),\n  getFloat16: define(null, [\n    \"es.data-view.get-float16\",\n    ...DataViewDependencies,\n  ]),\n  getUint8Clamped: define(null, [\n    \"esnext.data-view.get-uint8-clamped\",\n    ...DataViewDependencies,\n  ]),\n  getYear: define(null, [\"es.date.get-year\"]),\n  group: define(\"instance/group\", [\"esnext.array.group\"]),\n  groupBy: define(\"instance/group-by\", [\"esnext.array.group-by\"]),\n  groupByToMap: define(\"instance/group-by-to-map\", [\n    \"esnext.array.group-by-to-map\",\n    \"es.map\",\n    \"es.object.to-string\",\n  ]),\n  groupToMap: define(\"instance/group-to-map\", [\n    \"esnext.array.group-to-map\",\n    \"es.map\",\n    \"es.object.to-string\",\n  ]),\n  fontcolor: define(null, [\"es.string.fontcolor\"]),\n  fontsize: define(null, [\"es.string.fontsize\"]),\n  forEach: define(\"instance/for-each\", [\n    \"es.array.for-each\",\n    \"es.iterator.for-each\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.for-each\",\n    \"web.dom-collections.for-each\",\n  ]),\n  includes: define(\"instance/includes\", [\n    \"es.array.includes\",\n    \"es.string.includes\",\n  ]),\n  indexed: define(null, [\n    \"esnext.async-iterator.indexed\",\n    ...AsyncIteratorDependencies,\n    \"esnext.iterator.indexed\",\n    ...IteratorDependencies,\n  ]),\n  indexOf: define(\"instance/index-of\", [\"es.array.index-of\"]),\n  isWellFormed: define(\"instance/is-well-formed\", [\"es.string.is-well-formed\"]),\n  italic: define(null, [\"es.string.italics\"]),\n  join: define(null, [\"es.array.join\"]),\n  keys: define(\"instance/keys\", ArrayNatureIteratorsWithTag),\n  lastIndex: define(null, [\"esnext.array.last-index\"]),\n  lastIndexOf: define(\"instance/last-index-of\", [\"es.array.last-index-of\"]),\n  lastItem: define(null, [\"esnext.array.last-item\"]),\n  link: define(null, [\"es.string.link\"]),\n  map: define(\"instance/map\", [\n    \"es.array.map\",\n    \"es.iterator.map\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.map\",\n  ]),\n  match: define(null, [\"es.string.match\", \"es.regexp.exec\"]),\n  matchAll: define(\"instance/match-all\", [\n    \"es.string.match-all\",\n    \"es.regexp.exec\",\n  ]),\n  name: define(null, [\"es.function.name\"]),\n  padEnd: define(\"instance/pad-end\", [\"es.string.pad-end\"]),\n  padStart: define(\"instance/pad-start\", [\"es.string.pad-start\"]),\n  push: define(\"instance/push\", [\"es.array.push\"]),\n  reduce: define(\"instance/reduce\", [\n    \"es.array.reduce\",\n    \"es.iterator.reduce\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.reduce\",\n  ]),\n  reduceRight: define(\"instance/reduce-right\", [\"es.array.reduce-right\"]),\n  repeat: define(\"instance/repeat\", [\"es.string.repeat\"]),\n  replace: define(null, [\"es.string.replace\", \"es.regexp.exec\"]),\n  replaceAll: define(\"instance/replace-all\", [\n    \"es.string.replace-all\",\n    \"es.string.replace\",\n    \"es.regexp.exec\",\n  ]),\n  reverse: define(\"instance/reverse\", [\"es.array.reverse\"]),\n  search: define(null, [\"es.string.search\", \"es.regexp.exec\"]),\n  setFloat16: define(null, [\n    \"es.data-view.set-float16\",\n    ...DataViewDependencies,\n  ]),\n  setUint8Clamped: define(null, [\n    \"esnext.data-view.set-uint8-clamped\",\n    ...DataViewDependencies,\n  ]),\n  setYear: define(null, [\"es.date.set-year\"]),\n  slice: define(\"instance/slice\", [\"es.array.slice\"]),\n  small: define(null, [\"es.string.small\"]),\n  some: define(\"instance/some\", [\n    \"es.array.some\",\n    \"es.iterator.some\",\n    ...IteratorDependencies,\n    // \"esnext.async-iterator.some\",\n  ]),\n  sort: define(\"instance/sort\", [\"es.array.sort\"]),\n  splice: define(\"instance/splice\", [\"es.array.splice\"]),\n  split: define(null, [\"es.string.split\", \"es.regexp.exec\"]),\n  startsWith: define(\"instance/starts-with\", [\"es.string.starts-with\"]),\n  sticky: define(null, [\"es.regexp.sticky\"]),\n  strike: define(null, [\"es.string.strike\"]),\n  sub: define(null, [\"es.string.sub\"]),\n  substr: define(null, [\"es.string.substr\"]),\n  sup: define(null, [\"es.string.sup\"]),\n  take: define(null, [\n    \"es.iterator.take\",\n    ...IteratorDependencies,\n    \"esnext.async-iterator.take\",\n    ...AsyncIteratorDependencies,\n  ]),\n  test: define(null, [\"es.regexp.test\", \"es.regexp.exec\"]),\n  toArray: define(null, [\n    \"es.iterator.to-array\",\n    ...IteratorDependencies,\n    \"esnext.async-iterator.to-array\",\n    ...AsyncIteratorDependencies,\n  ]),\n  toAsync: define(null, [\n    \"esnext.iterator.to-async\",\n    ...IteratorDependencies,\n    ...AsyncIteratorDependencies,\n    ...AsyncIteratorProblemMethods,\n  ]),\n  toExponential: define(null, [\"es.number.to-exponential\"]),\n  toFixed: define(null, [\"es.number.to-fixed\"]),\n  toGMTString: define(null, [\"es.date.to-gmt-string\"]),\n  toISOString: define(null, [\"es.date.to-iso-string\"]),\n  toJSON: define(null, [\"es.date.to-json\"]),\n  toPrecision: define(null, [\"es.number.to-precision\"]),\n  toReversed: define(\"instance/to-reversed\", [\"es.array.to-reversed\"]),\n  toSorted: define(\"instance/to-sorted\", [\n    \"es.array.to-sorted\",\n    \"es.array.sort\",\n  ]),\n  toSpliced: define(\"instance/to-spliced\", [\"es.array.to-spliced\"]),\n  toString: define(null, [\n    \"es.object.to-string\",\n    \"es.error.to-string\",\n    \"es.date.to-string\",\n    \"es.regexp.to-string\",\n  ]),\n  toWellFormed: define(\"instance/to-well-formed\", [\"es.string.to-well-formed\"]),\n  trim: define(\"instance/trim\", [\"es.string.trim\"]),\n  trimEnd: define(\"instance/trim-end\", [\"es.string.trim-end\"]),\n  trimLeft: define(\"instance/trim-left\", [\"es.string.trim-start\"]),\n  trimRight: define(\"instance/trim-right\", [\"es.string.trim-end\"]),\n  trimStart: define(\"instance/trim-start\", [\"es.string.trim-start\"]),\n  uniqueBy: define(\"instance/unique-by\", [\"esnext.array.unique-by\", \"es.map\"]),\n  unshift: define(\"instance/unshift\", [\"es.array.unshift\"]),\n  unThis: define(\"instance/un-this\", [\"esnext.function.un-this\"]),\n  values: define(\"instance/values\", ArrayNatureIteratorsWithTag),\n